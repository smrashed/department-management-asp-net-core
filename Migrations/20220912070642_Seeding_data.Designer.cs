// <auto-generated />
using System;
using DepartmentManagement.Data.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DepartmentManagement.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220912070642_Seeding_data")]
    partial class Seeding_data
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DepartmentManagement.Models.Entity.Course", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Credit")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = "CSE-101",
                            Credit = 3,
                            DepartmentId = 1,
                            Name = "Computer Fundamentals",
                            TeacherId = 110
                        },
                        new
                        {
                            Id = "CSE-102",
                            Credit = 3,
                            DepartmentId = 1,
                            Name = "C Programming",
                            TeacherId = 111
                        },
                        new
                        {
                            Id = "CSE-103",
                            Credit = 3,
                            DepartmentId = 1,
                            Name = "Mathematics-I",
                            TeacherId = 220
                        },
                        new
                        {
                            Id = "CSE-104",
                            Credit = 3,
                            DepartmentId = 1,
                            Name = "Electronics-I",
                            TeacherId = 221
                        },
                        new
                        {
                            Id = "CSE-105",
                            Credit = 3,
                            DepartmentId = 1,
                            Name = "Mathematics-II",
                            TeacherId = 330
                        },
                        new
                        {
                            Id = "CSE-106",
                            Credit = 3,
                            DepartmentId = 1,
                            Name = "Computer Architecture",
                            TeacherId = 331
                        },
                        new
                        {
                            Id = "CSE-107",
                            Credit = 3,
                            DepartmentId = 1,
                            Name = "Electronics-II",
                            TeacherId = 440
                        },
                        new
                        {
                            Id = "CSE-108",
                            Credit = 3,
                            DepartmentId = 1,
                            Name = "Statistics",
                            TeacherId = 441
                        });
                });

            modelBuilder.Entity("DepartmentManagement.Models.Entity.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ChairmanId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChairmanId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Dept. of CSE, Islamic University, kushtia",
                            Name = "CSE"
                        });
                });

            modelBuilder.Entity("DepartmentManagement.Models.Entity.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Person");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Person");
                });

            modelBuilder.Entity("DepartmentManagement.Models.Entity.Student", b =>
                {
                    b.HasBaseType("DepartmentManagement.Models.Entity.Person");

                    b.Property<decimal?>("CGPA")
                        .HasColumnType("decimal(3,2)");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Semister")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Session")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("DepartmentId");

                    b.HasDiscriminator().HasValue("Student");

                    b.HasData(
                        new
                        {
                            Id = 1147,
                            Email = "smrashed@abc.com",
                            FirstName = "SM",
                            LastName = "Rashedul Islam",
                            PhoneNumber = "+8801712345678",
                            DepartmentId = 1,
                            EnrollmentDate = new DateTime(2015, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Semister = "1st",
                            Session = "14-15"
                        },
                        new
                        {
                            Id = 1148,
                            Email = "mamun77@abc.com",
                            FirstName = "Md",
                            LastName = "Abdullah Al-mamun",
                            PhoneNumber = "+8801512343678",
                            DepartmentId = 1,
                            EnrollmentDate = new DateTime(2015, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Semister = "1st",
                            Session = "14-15"
                        },
                        new
                        {
                            Id = 1149,
                            Email = "nibir.hossain@xyz.com",
                            FirstName = "Nibir",
                            LastName = "Hossain",
                            PhoneNumber = "+8801912345679",
                            DepartmentId = 1,
                            EnrollmentDate = new DateTime(2015, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Semister = "1st",
                            Session = "14-15"
                        },
                        new
                        {
                            Id = 1150,
                            Email = "tanzim.tetumir@abc.com",
                            FirstName = "Tanzim",
                            LastName = "Tetumir",
                            PhoneNumber = "+8801612345778",
                            DepartmentId = 1,
                            EnrollmentDate = new DateTime(2015, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Semister = "1st",
                            Session = "14-15"
                        },
                        new
                        {
                            Id = 1151,
                            Email = "jakushamim@xyz.com",
                            FirstName = "Md",
                            LastName = "Shamim Hossain",
                            PhoneNumber = "+8801312345671",
                            DepartmentId = 1,
                            EnrollmentDate = new DateTime(2015, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Semister = "1st",
                            Session = "14-15"
                        });
                });

            modelBuilder.Entity("DepartmentManagement.Models.Entity.Teacher", b =>
                {
                    b.HasBaseType("DepartmentManagement.Models.Entity.Person");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("Teacher_DepartmentId");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("JoiningDate")
                        .HasColumnType("datetime2");

                    b.HasIndex("DepartmentId");

                    b.HasDiscriminator().HasValue("Teacher");

                    b.HasData(
                        new
                        {
                            Id = 110,
                            Email = "atikur.rahman111@abc.com",
                            FirstName = "Md. Atikur",
                            LastName = "Rahman",
                            PhoneNumber = "+8801555566678",
                            DepartmentId = 1,
                            Designation = "Lecturer",
                            JoiningDate = new DateTime(2006, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 111,
                            Email = "alamgir.hossain112@abc.com",
                            FirstName = "Md. Alamgir",
                            LastName = "Hossain",
                            PhoneNumber = "+8801543566676",
                            DepartmentId = 1,
                            Designation = "Lecturer",
                            JoiningDate = new DateTime(2007, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 220,
                            Email = "shohanur.rahman220@abc.com",
                            FirstName = "Md. Shohanur",
                            LastName = "Rahman",
                            PhoneNumber = "+8801666544479",
                            DepartmentId = 1,
                            Designation = "Assistant Professor",
                            JoiningDate = new DateTime(1999, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 221,
                            Email = "muzahidur.rahman221@abc.com",
                            FirstName = "Md. Muzahidur",
                            LastName = "Rahman",
                            PhoneNumber = "+8801666655681",
                            DepartmentId = 1,
                            Designation = "Assistant Professor",
                            JoiningDate = new DateTime(1999, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 330,
                            Email = "aom.asaduzzaman330@abc.com",
                            FirstName = "A.O.M",
                            LastName = "Asaduzzaman",
                            PhoneNumber = "+8801666566856",
                            DepartmentId = 1,
                            Designation = "Associate Professor",
                            JoiningDate = new DateTime(1999, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 331,
                            Email = "robiul.islam331@abc.com",
                            FirstName = "Md",
                            LastName = "Robiul Islam",
                            PhoneNumber = "+8801666569958",
                            DepartmentId = 1,
                            Designation = "Associate Professor",
                            JoiningDate = new DateTime(1999, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 441,
                            Email = "aktaruzzaman.babu441@xyz.com",
                            FirstName = "Md. Aktaruzzaman",
                            LastName = "Babu",
                            PhoneNumber = "+8801999566672",
                            DepartmentId = 1,
                            Designation = "Professor",
                            JoiningDate = new DateTime(2001, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 440,
                            Email = "ahsanul.ambia440@abc.com",
                            FirstName = "Md. Ahsanul",
                            LastName = "Ambia",
                            PhoneNumber = "+8801666566688",
                            DepartmentId = 1,
                            Designation = "Professor",
                            JoiningDate = new DateTime(1999, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("DepartmentManagement.Models.Entity.Chairman", b =>
                {
                    b.HasBaseType("DepartmentManagement.Models.Entity.Teacher");

                    b.Property<string>("TermEnd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TermStart")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Chairman");
                });

            modelBuilder.Entity("DepartmentManagement.Models.Entity.Course", b =>
                {
                    b.HasOne("DepartmentManagement.Models.Entity.Department", "Department")
                        .WithMany("Courses")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("DepartmentManagement.Models.Entity.Teacher", "Teacher")
                        .WithMany("Courses")
                        .HasForeignKey("TeacherId");

                    b.Navigation("Department");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("DepartmentManagement.Models.Entity.Department", b =>
                {
                    b.HasOne("DepartmentManagement.Models.Entity.Chairman", "Chairman")
                        .WithMany()
                        .HasForeignKey("ChairmanId");

                    b.Navigation("Chairman");
                });

            modelBuilder.Entity("DepartmentManagement.Models.Entity.Student", b =>
                {
                    b.HasOne("DepartmentManagement.Models.Entity.Department", "Department")
                        .WithMany("Students")
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("DepartmentManagement.Models.Entity.Teacher", b =>
                {
                    b.HasOne("DepartmentManagement.Models.Entity.Department", "Department")
                        .WithMany("Teachers")
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("DepartmentManagement.Models.Entity.Department", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Students");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("DepartmentManagement.Models.Entity.Teacher", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
